plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.revfactory'
version = '0.1.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jsoup:jsoup:1.15.3'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

ext.admin = System.getenv("OSSRH_USERNAME")

signing {
    required { admin }
    def signingKey = findProperty("signingKey") ?: System.getenv('SIGNING_KEY')
    def signingPassword = findProperty("signingPassword") ?: System.getenv('SIGNING_PASSWORD')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'SubLinkExtractor'
                description = rootProject.description
                url = 'https://github.com/revfactory/sub-link-extractor'
                licenses {
                    license {
                        name = 'Apache 2.0 License'
                        url = 'https://github.com/revfactory/sub-link-extractor/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'revfactory'
                        name = 'Minho Hwang'
                        email = 'revfactory@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/revfactory/sub-link-extractor.git'
                    developerConnection = 'scm:git:ssh://git@github.com:revfactory/sub-link-extractor.git'
                    url = 'https://github.com/revfactory/sub-link-extractor'
                }
            }
        }
    }

    repositories {
        maven {
            name = 'OSSRH'
            url = uri('https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/')
            credentials {
                username project.findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
                password project.findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

